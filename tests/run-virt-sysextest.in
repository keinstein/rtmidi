#!/bin/bash

# return if we are configured without external loopback devices
@HAVE_EXTERNAL_LOOPBACK_FALSE@exit 0

COMMAND="tests/sysextest 50"
INPUT_PATTERN='@rtmidi_virtual_device@'
OUTPUT_PATTERN='@rtmidi_virtual_device@'
VIRTUAL_DEVICE='@rtmidi_virtual_device@'

set -e

TMPDIR=$(mktemp -d -t ${PROGNAME}.XXXXXXXX)

if [ "x${VIRTUAL_DEVICE}" != "x" ]
then
    mkfifo "$TMPDIR/loopstdin.pipe"
    exec {loopstdin}<> "$TMPDIR/loopstdin.pipe"

    ${rundir}/loopback-device <&${loopstdin} &
    LOOPBACK_PID=$!
fi


coproc $COMMAND
set |grep -i cop

read -u ${COPROC[0]} -d ']' -r line
echo "$line"
echo -e 'N\n'  >&${COPROC[1]}

while read line
do
    echo "$line"
    number=$(echo "$line" | sed -e '/^Input/ {s/^[^#]*#\([0-9]*\):.*'"$INPUT_PATTERN"'.*$/\1/; p}; d')
    if test "x$number" != "x"
    then
	echo "chosing Port #$number"
	echo "$number" >&${COPROC[1]}
	break
    fi
done <&${COPROC[0]}

read -u ${COPROC[0]} -d ']' -r line
echo "$line"
echo -e 'N\n'  >&${COPROC[1]}


while read line
do
    echo "$line"
    number=$(echo "$line" | sed -e '/^Output/ {s/^[^#]*#\([0-9]*\):.*'"$OUTPUT_PATTERN"'.*$/\1/; p}; d')
    if test "$numberx" != "x"
    then
	echo "chosing Port #$number"
	echo "$number" >&${COPROC[1]}
	break
    fi
done <&${COPROC[0]}


while read line
do
	echo "$line"
done <&${COPROC[0]}


if [ "x${VIRTUAL_DEVICE}" != "x" ]
then
    echo -e "\x03" >&$loopstdin
    kill -SIGINT ${LOOPBACK_PID} || true
    echo "Waiting for loopback client to finish (PID=${LOOPBACK_PID})"
    wait ${LOOPBACK_PID}
fi

rm -f \
   "$TMPDIR/loopstdin.pipe"
#   "$TMPDIR/instdin.pipe" "$TMPDIR/instdout.pipe" "$TMPDIR/outstdin.pipe" "$TMPDIR/outstdout.pipe" \

rmdir $TMPDIR

wait ${COPROC_PID}


